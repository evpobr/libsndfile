name: C/C++ CI

on: [push]

jobs:
  build:
    strategy:
      matrix:
        name: [
          ubuntu-latest-gcc-autotools,
          ubuntu-latest-clang-autotools,
          macos-latest-autotools,
          ubuntu-latest-gcc-cmake,
          ubuntu-latest-clang-cmake,
          macos-latest-cmake,
          windows-latest-vs2019-x64,
          windows-latest-vs2019-Win32
        ]
        include:
          - name: ubuntu-latest-gcc-autotools
            os: ubuntu-latest
            cc: gcc
            cxx: g++
            build-system: autotools

          - name: ubuntu-latest-clang-autotools
            os: ubuntu-latest
            cc: clang
            cxx: clang++
            build-system: autotools

          - name: macos-latest-autotools
            os: macos-latest
            cc: clang
            cxx: clang++
            build-system: autotools

          - name: ubuntu-latest-gcc-cmake
            os: ubuntu-latest
            cc: gcc
            cxx: g++
            build-system: cmake
            cmake-generator: 'Unix Makefiles'
            cmake-options: '-DCMAKE_BUILD_TYPE=Release'

          - name: ubuntu-latest-clang-cmake
            os: ubuntu-latest
            cc: clang
            cxx: clang++
            build-system: cmake
            cmake-generator: 'Unix Makefiles'
            cmake-options: '-DCMAKE_BUILD_TYPE=Release'

          - name: macos-latest-cmake
            os: macos-latest
            cc: clang
            cxx: clang++
            build-system: cmake
            cmake-generator: 'Unix Makefiles'
            cmake-options: '-DCMAKE_BUILD_TYPE=Release'

          - name: windows-latest-vs2019-x64
            os: windows-latest
            triplet: 'x64-windows-static'
            build-system: cmake
            cmake-generator: 'Visual Studio 16 2019'
            cmake-options: '-DENABLE_STATIC_RUNTIME=ON -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake'

          - name: windows-latest-vs2019-Win32
            os: windows-latest
            triplet: 'x86-windows-static'
            build-system: cmake
            cmake-generator: 'Visual Studio 16 2019'
            cmake-options: '-DENABLE_STATIC_RUNTIME=ON -DCMAKE_GENERATOR_PLATFORM=Win32 -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x86-windows-static -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake'

    runs-on: ${{ matrix.os }}    
    steps:
      - uses: actions/checkout@v2
      - name: Install MacOS dependencies

        if: startsWith(matrix.os,'macOS')
        run: |
          brew update
          brew install autoconf automake libtool autogen libogg libvorbis flac opus sqlite3 speex

      - name: Install Lunux dependencies
        if: startsWith(matrix.os,'ubuntu')
        run: sudo apt-get install -y autogen libogg-dev libvorbis-dev libflac-dev libopus-dev libasound2-dev libsqlite3-dev libspeex-dev

      - name: Install Windows dependencies
        if: startsWith(matrix.os,'Windows') == true
        run: |
          vcpkg install libvorbis libflac opus sqlite3 speex --triplet ${{matrix.triplet}}

      - name: Configure with Autotools
        if: startsWith(matrix.build-system,'autotools')
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |
          ./autogen.sh
          if [[ "${CC}" == "clang" ]]; then
            ./configure --enable-werror
          else
            Scripts/asan-configure.sh --enable-werror
          fi

      - name: Build with Autotools
        if: startsWith(matrix.build-system,'autotools')
        run: make

      - name: Test with Autotools
        if: startsWith(matrix.build-system,'autotools')
        run: |
          make check
          make distcheck
        
      - name: Create CMake build directory
        if: startsWith(matrix.build-system,'cmake')
        run: |
          mkdir build

      - name: Configure with CMake
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        if: startsWith(matrix.build-system,'cmake')
        run: |
          cd build
          cmake .. -G "${{matrix.cmake-generator}}" ${{matrix.cmake-options}}

      - name: Build with CMake
        if: startsWith(matrix.build-system,'cmake')
        run: |
          cd build
          cmake --build . --config Release

      - name: Test with CMake
        if: startsWith(matrix.build-system,'cmake')
        run: |
          cd build
          ctest
